{
	"info": {
		"_postman_id": "aab84613-386b-4ebe-b1d0-02b0e89166a0",
		"name": "Ixmatix",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20106374"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id, title, author, price, and published\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(book) {",
							"        pm.expect(book).to.have.property('id');",
							"        pm.expect(book).to.have.property('title');",
							"        pm.expect(book).to.have.property('author');",
							"        pm.expect(book).to.have.property('price');",
							"        pm.expect(book).to.have.property('published');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Price is in a valid format\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    responseData.forEach(function(book) {",
							"        pm.expect(book.price).to.match(/^\\d+(\\.\\d{1,2})?$/);",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Published date is in a valid date format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    responseData.forEach(function(book) {",
							"        pm.expect(book.published).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/books/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"books",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id, title, author, price, and published\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(book) {",
							"        pm.expect(book).to.have.property('id');",
							"        pm.expect(book).to.have.property('title');",
							"        pm.expect(book).to.have.property('author');",
							"        pm.expect(book).to.have.property('price');",
							"        pm.expect(book).to.have.property('published');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Price is in a valid format\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    responseData.forEach(function(book) {",
							"        pm.expect(book.price).to.match(/^\\d+(\\.\\d{1,2})?$/);",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Published date is in a valid date format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    responseData.forEach(function(book) {",
							"        pm.expect(book.published).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/books/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"books",
						"books"
					]
				}
			},
			"response": []
		}
	]
}